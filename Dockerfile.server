# Dockerfile for LangGraph server
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    unzip \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Deno for langchain-sandbox
RUN curl -fsSL https://deno.land/install.sh | sh
ENV DENO_INSTALL="/root/.deno"
ENV PATH="$DENO_INSTALL/bin:$PATH"

# Copy project files
COPY pyproject.toml .
COPY README.md .
COPY src/ ./src/
COPY tests/ ./tests/
COPY langgraph.json .
COPY constraints.txt .

# Install Python dependencies with constraints to ensure GitHub source
RUN pip install --no-cache-dir uv && \
    uv pip install --system --constraint constraints.txt .

# Install langgraph-cli
RUN uv pip install --system "langgraph-cli[inmem]"

# Verify langchain-sandbox is from GitHub (version should be 0.0.7+, not 0.0.1 from PyPI)
RUN python -c "import langchain_sandbox; import sys; version = getattr(langchain_sandbox, '__version__', 'unknown'); print(f'langchain-sandbox version: {version}'); sys.exit(1 if version == '0.0.1' else 0)" && \
    echo "✅ langchain-sandbox correctly installed from GitHub"

# Download and prepare TypeScript source from GitHub to avoid JSR dependencies
RUN mkdir -p /tmp/langchain-sandbox-ts && \
    curl -s -o /tmp/langchain-sandbox-ts/pyodide_sandbox.ts \
    https://raw.githubusercontent.com/johannhartmann/langchain-sandbox/main/libs/pyodide-sandbox-js/main.ts && \
    # Replace JSR imports with Deno.land URLs
    sed -i 's|import { join } from "@std/path";|import { join } from "https://deno.land/std@0.224.0/path/mod.ts";|' \
        /tmp/langchain-sandbox-ts/pyodide_sandbox.ts && \
    sed -i 's|import { parseArgs } from "@std/cli/parse-args";|import { parseArgs } from "https://deno.land/std@0.224.0/cli/parse_args.ts";|' \
        /tmp/langchain-sandbox-ts/pyodide_sandbox.ts && \
    # Fix pyodide import
    sed -i 's|import { loadPyodide } from "pyodide";|import { loadPyodide } from "npm:pyodide@0.26.4";|' \
        /tmp/langchain-sandbox-ts/pyodide_sandbox.ts && \
    echo "✅ TypeScript source prepared from GitHub"

# Set environment variable to use our prepared TypeScript source
ENV LANGCHAIN_SANDBOX_TS_SOURCE=/tmp/langchain-sandbox-ts/pyodide_sandbox.ts

# Expose ports for both servers
EXPOSE 2024 8001

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV LANGSMITH_TRACING=true
ENV LANGSMITH_PROJECT=learning-agent
ENV DOCKER_ENV=1

# Copy scripts
COPY scripts/start_servers.sh /app/scripts/

# Make script executable
RUN chmod +x /app/scripts/start_servers.sh

# Run both servers
CMD ["/app/scripts/start_servers.sh"]
